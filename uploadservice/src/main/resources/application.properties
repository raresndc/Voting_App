spring.application.name=uploadservice

server.port = 8082

spring.database.name=db_ibd
spring.datasource.url=jdbc:mysql://localhost:3306/db_vote?allowPublicKeyRetrievalx=true&createDatabaseIfNotExist=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=!Aa123456
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.datasource.hikari.data-source-properties.oracle.net.CONNECT_TIMEOUT=10000
spring.datasource.hikari.data-source-properties.oracle.net.READ_TIMEOUT=10000
spring.datasource.hikari.data-source-properties.oracle.jdbc.ReadTimeout=10000
spring.main.allow-bean-definition-overriding = true
#spring.jpa.properties.hibernate.dialect.storage_engine=innodb
spring.jpa.show-sql: true


spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# JWT validation
spring.security.oauth2.resourceserver.jwt.public-key-location=classpath:public.pem
# If you prefer opaque tokens instead, comment the line above and use the check_token endpoint:
# spring.security.oauth2.resourceserver.opaque-token.introspection-uri=https://auth-service/oauth/check_token
# spring.security.oauth2.resourceserver.opaque-token.client-id=document_service
# spring.security.oauth2.resourceserver.opaque-token.client-secret=secret

# CORS for the front-end
app.web.allowed-origins=https://localhost:3000